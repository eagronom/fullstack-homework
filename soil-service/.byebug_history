c
continue
crops.sort_by { |crop| crop[:year] }.dig(:crop)
crops.sort_by { |crop| crop[:year] }.try(:crop)
crops.sort_by { |crop| crop[:year] }.try(:[], :crop)
crops.sort_by { |crop| crop[:year] }.try(:[], :fsda)
crops.sort_by { |crop| crop[:year] }.pluck(:fas).compact
crops.sort_by { |crop| crop[:year] }.pluck(:fas)
crops.sort_by { |crop| crop[:year] }
c
params.require(:action)
params.require(fields: [])
params.require('fields')
params.require(:fields)
params.inspect
c
params.permit(fields: [])
params.permit(:fields)
params.permit[:fields]
params[:fields]
c
params
c
params.require(:field)
params.require('fields')
params.require(:fields)
params['fields']
params[:fields]
params
c
params[:field]
params[:fields]
params
c
params
params[:fields]
c
fields
c
params
c
paarms
c
params
c
params
fields
field
c
fields
c
c\
c
crop[:humus_delta].to_i
crop[:humus_delta]
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crops
c
fields[0][:crops].sort_by { |hsh| hsh[:year] }.pluck(:crop)
fields[0][:crops].sort_by { |hsh| hsh[:year] }
fields[0][:crops].order_by(:year)
fields[0][:crops].order_by
fields[0][:crops]
fields[0]
field[0]
fields
c
params
c
params
c
params
c
fields
c
CROPS
value
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
crop
c
params.require(:fields).map { |f| puts f }
params.require(:fields).map {}
params.require(:fields)
params.permit(fields: [:id, crops: []]).require(:fields)
params.require(:fields).permit(:id, crops: [])
params.require(:fields)
params
params.permit(fields: [:id, crops: []])
params.permit(fields: [:id, crops: []]).params
params.permit(fields: [:id, crops: []]).values
params.permit(fields: [:id, crops: []]).value
params.permit(fields: [:id, crops: []])
c
params.permit(fields: [:id, crops: []])
continue
params.permit(fields: [:id, crops: []])
params[:fields].permit(:[])
params[:fields]
params.permit[fields: []]
params.permit[:fields]
params[:fields]
params[:fields].permit
params[:fields]
params.require(:fields).permit(:id)
params.require(:fields)
params
c
params
c
field_ids
c
field_ids['field_ids']
field_ids.include?('1')
field_ids
FieldsService.instance.fetch_fields.select { |field| field_ids.include?(field[:id].to_s) }
FieldsService.instance.fetch_fields.select { |field| field_ids.include?(field[:id].to_i) }
field_ids
c
JSON.parse(response.body)
c
response.body
c
crops[index - 1]
index - 
index
crops[index - 1][:crop]
c
*crops
**crops
crops.index_by { |c| c[:year] }.map { |c| [c] }
crops.index_by { |c| c[:year] }.map { |c| c }
crops.index_by { |c| c[:year] }
crops.index_by { |c| c[:year] }.map { |c| c }
crops.index_by { |c| c[:year] }.map { |c| c[:crop] }
crops.pluck(:year, :crop).
crops
crops.
crops.index_by { |c| c[:year] }
crops.index_by(:year)
crops.pluck(:year, :crop)
crops
crops.values
c
crop['humus_delta']
crop[:humus_delta]
crop
crop[:humus_delta]
crop[:humus_delta] * 1.3
previous_crop.try(:[], :value).to_i == crop[:value]
crop
ccrop
c
field[:crops].each_with_index.inject(0) { |sum, (i, j)| puts j }
field[:crops].each_with_index.inject(0) { |sum, (i, j)| puts i }
c
field[:crops].map { |crop| [crop[:year], crop[:crop][:value], crop[:crop][:humus_delta]] }
field[:crops].map { |crop| [crop[:year], crop[:crop][:value], rop[:crop][:humus_delta]] }
field[:crops].map { |crop| [crop[:year], crop[:crop][:value]] }
field[:crops].pluck { |crop| crop }
field[:crops].pluck { |crop| crop[:year] }
field[:crops].pluck { |crop| [crop[:year]] }
field[:crops].pluck { |crop| [crop[:year], crop[:crop][:value]] }
field[:crops].pluck(:year, :crop)
field[:crops].pluck(:year)
field[:crops]
field
fields.group_by { |f| f[:id] }
field
fields.group_by(:id)
field[:crops]
field
field[:crops].pluck(:crop).group_by { |c| c[:value] }.each{|_, v| v.map!{|h| h[
field[:crops].pluck(:crop).group_by { |c| c[:value] }.each{|_, v| v.map!{|h| h[:name]}}
field[:crops].pluck(:crop).group_by { |c| c[:value] }..each{|_, v| v.map!{|h| h[:name]}}
field[:crops].pluck(:crop).
field[:crops].pluck(:crop).group_by { |c| c[:value] }
field[:crops].pluck(:crop).group_by(:value)
field[:crops].pluck(:crop).group_by(&:value)
field[:crops].pluck(:crop).group_by(:value)
field[:crops].pluck(:crop).group_by { |c| c[:value] }
field[:crops].pluck(:crop).group_by('value')
field[:crops].pluck(:crop)
field[:crops].pluck(:crop).
field[:crops].pluck(:crop).index_by(:value)
field[:crops].pluck(:crop)
c
field[:crops].pluck(:crop).pluck(:humus_delta)
field[:crops].pluck(:crop)
field[:crops].select(:crop)
field[:crops].as_json[:crop]
field[:crops].as_json.crop
field[:crops].as_json
field[:crops].to_json
field.try(:[], :crops).try(:[], :crop)
field.try(:[], :crops).try(:crop)
field.try(:[], :crops)
